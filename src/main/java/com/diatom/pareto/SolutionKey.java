package com.diatom.pareto;

/**
 * The solution key is a three-level identifier that uniquely specifies the optimizer that generated
 * the solution, the problem that was input to the solution, and the particular solution instance produced
 * when the problem is run against the optimizer.  The solution key can be used for distinguishing solutions
 * generated on different optimizers and/or problem instances.
 * 
 * @author mmcgettrick
 *
 */
public class SolutionKey {

	private long problemId;
	private long optimizerId;
	private long solutionId;
	
	/**
	 * Constructor
	 */
	public SolutionKey() {
		this.problemId = Long.MIN_VALUE;
		this.optimizerId = Long.MIN_VALUE;
		this.solutionId = Long.MIN_VALUE;
	}

	/**
	 * Constructor
	 * @param problemId The id of the problem instance
	 * @param optimizerId The id of the optimizer instance
	 * @param solutionId The id of the solution generated by the optimizer when running the problem
	 */
	public SolutionKey(long problemId, long optimizerId, long solutionId) {
		this.problemId = problemId;
		this.optimizerId = optimizerId;
		this.solutionId = solutionId;
	}
	
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + (int) (optimizerId ^ (optimizerId >>> 32));
		result = prime * result + (int) (problemId ^ (problemId >>> 32));
		result = prime * result + (int) (solutionId ^ (solutionId >>> 32));
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if(this == obj)
			return true;
		if(obj == null)
			return false;
		if(getClass() != obj.getClass())
			return false;
		SolutionKey other = (SolutionKey) obj;
		if(optimizerId != other.optimizerId)
			return false;
		if(problemId != other.problemId)
			return false;
		if(solutionId != other.solutionId)
			return false;
		return true;
	}

	/**
	 * Get the problem ID
	 * @return
	 */
	public long getProblemId() {
		return problemId;
	}

	/**
	 * Get the optimizer ID
	 * @return
	 */
	public long getOptimizerId() {
		return optimizerId;
	}

	/**
	 * Get the solution ID
	 * @return
	 */
	public long getSolutionId() {
		return solutionId;
	}

	/**
	 * Set the problem ID
	 * @param problemId The problem ID
	 */
	public void setProblemId(long problemId) {
		this.problemId = problemId;
	}

	/**
	 * Set the optimizer ID
	 * @param optimizerId The optimizer ID
	 */
	public void setOptimizerId(long optimizerId) {
		this.optimizerId = optimizerId;
	}

	/**
	 * Set the solution ID
	 * @param solutionId The solution ID
	 */
	public void setSolutionId(long solutionId) {
		this.solutionId = solutionId;
	}

	/*
	@Override
	public void readFromJSON(JSONObject json) throws JSONException {
		this.problemId = json.getLong("problemId");
		this.optimizerId = json.getLong("optimizerId");
		this.solutionId = json.getLong("solutionId");
	}

	@Override
	public void writeToJSON(JSONObject json) throws JSONException {
		json.put("problemId",this.problemId);
		json.put("optimizerId",this.optimizerId);
		json.put("solutionId",this.solutionId);
	}
	*/

	/**
	 * Output the solution key as a string: problemID.optimizerID.solutionID
	 */
	@Override
	public String toString() {
		return problemId + "." + optimizerId + "." + solutionId;
	}
	
}
